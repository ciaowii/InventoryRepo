var ORDERMANAGEMENTSALESORDER = (function () {
    var _variables = {
        params: null,
        loaderMsg: "",
        UpdateMsg: "",
        gvProductHeight: 230
    }

    var _doInitializeElements = function () {
        $('body').on('click', '#btnaddsalesorder', function () {
            _doAddSalesOrder();
        });

        $('body').on('click', '#btnsavesalesorder', function () {
            _doSaveSalesOrder();
        });

        $('body').on('click', '#btnclickaddsalesorder', function () {
            var $elem = $(this);
            _clickAddSalesOrder($elem);


        });

        $('body').on('click', '#searchproduct', function () {
            $('#mdlsearchproduct').modal('show');
        });

        $('body').on('click', '#btnfiltersalesorder', function () {
            $('#mdlsearchsavedsalesorder').modal('show');
        });

        $('body').on('shown.bs.modal', '#mdlsearchproduct', function () {
            $(document).off('focusin.modal');
        });

        $('body').on('click', '#searchdetails', function () {
            _doSearchItem();
        });

        $('body').on('click', '#removeitem', function () {
            var $this = $(this);
            _doRemoveSalesOrderItem($this);
        });

        $('body').on('blur', '#changeqty', function () {
            var $this = $(this);
            _doChangeQtyInSalesOrder($this);
        });

        $('body').on('keypress', '#changeqty', function (e) {
            var $this = $(this);

            if (e.keyCode == 13) {
                _doChangeQtyInSalesOrder($this);
            }
        });

        $('body').on('click', '#btnlistofsalesorder', function (e) {
            _doShowSavedSalesOrder();
        });

        $('body').on('click', '#btnsalesorderform', function () {
            _doShowSalesOrderForm();
        });

        $('body').on('click', '#refreshproduct', function () {
            _doRefreshItem();
        });

        $('body').on('click', '#searchsavedsalesorder', function () {

        });
    }
    
    var _doInitializeKendoElements = function () {
        $("#SalesCustomer").kendoDropDownList({
            filter: "startswith",
            optionLabel: 'Select Customer',
            dataTextField: "DropdownDisplay",
            dataValueField: "CustomerID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: _variables.params.customerGetUrl
                    }
                }
            }
        });

        $("#dpFrom").kendoDatePicker({
            format: "MM/dd/yyyy"
        });
        $("#dpTo").kendoDatePicker({
            format: "MM/dd/yyyy"
        });

        //$(".SalesUnit").kendoDropDownList({
        //    optionLabel: 'Select item',
        //    dataTextField: "UnitDesc",
        //    dataValueField: "UnitID",
        //    dataSource: {
        //        transport: {
        //            read: {
        //                dataType: "json",
        //                url: _variables.params.unitGetUrl
        //            }
        //        }
        //    }
        //});

        //$('#ProductCategory').kendoDropDownList({
        //    filter: "startswith",
        //    optionLabel: 'Select item',
        //    dataTextField: "CategoryDisplay",
        //    dataValueField: "CategoryID",
        //    change: doChangeProductCategory,
        //    dataSource: {
        //        serverFiltering: true,
        //        transport: {
        //            read: {
        //                dataType: "json",
        //                url: _variables.params.categoryGetUrl
        //            }
        //        }
        //    }
        //});

        //$("#SalesProduct").kendoDropDownList({
        //    filter: "startswith",
        //    optionLabel: 'Select item',
        //    dataTextField: "DropDownDisplay",
        //    dataValueField: "ProductID",
        //    dataSource: {
        //        transport: {
        //            read: {
        //                dataType: "json",
        //                url: _variables.params.productGetUrl
        //            }
        //        }
        //    }
        //});

        $('#SearchProductModel').kendoDropDownList({
            filter: "startswith",
            optionLabel: 'Select All',
            dataTextField: "ModelName",
            dataValueField: "ModelID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: _variables.params.modelGetUrl
                    }
                }
            }
        });

        $('#SearchProductCategory').kendoDropDownList({
            filter: "startswith",
            optionLabel: 'Select All',
            dataTextField: "CategoryDisplay",
            dataValueField: "CategoryID",
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: _variables.params.categoryGetUrl
                    }
                }
            }
        });
    }

    //#Region Private Methods
    var _doAddSalesOrder = function () {
        $frmSalesOrderDetails = $('#frmSalesOrderDetails');
        $gvSalesOrderDetails = $('#gvSalesOrderDetails tbody');
        var tempTable, curRow;

        $.ajax({
            url: _variables.params.addSalesOrderUrl,
            type: 'POST',
            data: $frmSalesOrderDetails.serialize(),
            success: function (data) {
                if (INFRA.ConvertToBoolean(data.isSuccess)) {
                    tempTable = $('<table></table>');
                    tempTable.html(data.salesOrder);
                    curRow = tempTable.find('tbody > tr');
                    if ($gvSalesOrderDetails.find('tr').length === 0) {
                        $gvSalesOrderDetails.html(curRow);

                    } else {
                        $(curRow).appendTo($gvSalesOrderDetails);
                    }
                    //_doBindTblProduct();
                }
                $('#divResultContainer').show().html(data.alertMessage);
            }
        });
    }
    var _clickAddSalesOrder = function (element) {
        var productId = element.data('product-id');
        var $gvSalesOrderDetails = $('#gvSalesOrderDetails tbody');
        var tempTable, curRow, isAddSuccess;

        

        $.ajax({
            url: _variables.params.addClickSalesOrderUrl,
            type: 'POST',
            data: { productId: productId },
            success: function (data) {
                if (INFRA.ConvertToBoolean(data.isSuccess)) {
                    tempTable = $('<table></table>');
                    tempTable.html(data.salesOrder);
                    curRow = tempTable.find('tbody > tr');
                    if ($gvSalesOrderDetails.find('tr').length === 0) {
                        $gvSalesOrderDetails.html(curRow);

                    } else {
                        isAddSuccess = _doCheckExistingProduct(productId);
                        if (INFRA.ConvertToBoolean(isAddSuccess)) {
                            $(curRow).appendTo($gvSalesOrderDetails);
                        }

                    }
                    //_doBindTblProduct();
                    _doCountTotalSalesOrder();
                    _doComputeTotalAmount();
                }
                $('#divResultContainer').show().html(data.alertMessage);
            }
        });
    }

    var _doCountExistingProduct = function () {

        var count = $gvSalesOrderDetails.find('tbody > tr');
        if (count.length >= 16) {
            toastr.error('Product should be only 16 items');
        }

    }
    var _doCheckExistingProduct = function (productId) {
        var productid = productId;
        var $gvSalesOrderDetails = $('#gvSalesOrderDetails');
        var productRowId = 0;
        var isSuccess = true;


        $gvSalesOrderDetails.find('tbody > tr').each(function () {
            $this = $(this);
            productRowId = $this.data('product-id');

            if (productRowId == productid) {
                toastr.error('this product is already in the order');
                isSuccess = false;
                return isSuccess;
            } else {
                return isSuccess;
            }

        });

        return isSuccess;
    }
    var _doComputeTotalAmount = function () {
        var total = 0;
        var $gvSalesOrderDetails = $('#gvSalesOrderDetails');

        $gvSalesOrderDetails.find('tbody > tr').each(function () {
            $tds = $(this).find('td');
            var totalPricePerItemQty;
            totalPricePerItemQty = INFRA.ConvertToFloat($tds.eq(3).find('span').text());

            total = total + totalPricePerItemQty
        });
        $('#salesordertotal').html(total);
    }
    var _doCountTotalSalesOrder = function () {
        var count = 0;
        var $gvSalesOrderDetails = $('#gvSalesOrderDetails');


        $gvSalesOrderDetails.find('tbody > tr').each(function () {
            $tds = $(this).find('td');
            count = count + 1;
        });
        $('#salesordercount').html(count);
    }
    var _doRemoveSalesOrderItem = function (element) {
        var $elem = (element);
        var productid;

        productid = $elem.data('product-id');
        $elem.parent().parent().parent().parent().remove();

        _doComputeTotalAmount();
        _doCountTotalSalesOrder();
    }
    var _doChangeQtyInSalesOrder = function (element) {
        var $elem = element;
        var productid, quantity, unitprice, totalpriceperitemqty;

        productid = $elem.data('product-id');
        quantity = $elem.val();
        unitprice = $elem.data('product-unit-price');


        if (!INFRA.IsNullOrEmpty(quantity)) {
            totalpriceperitemqty = quantity * unitprice;
            $elem.parent().parent().parent().parent().find('td').eq(3).find('span').text(INFRA.ConvertToFloat(totalpriceperitemqty).toFixed(2));
        }

        _doComputeTotalAmount();
    }
    var _doClearItemsInSalesOrder = function ()
    {
        $gvSalesOrderDetails.find('tbody > tr').each(function () {
            $this = $(this);
            $this.remove();
        });

        $('#SalesCustomer').data('kendoDropDownList').value(null);
        $('[data-valmsg-for="CustomerId"]').html("").removeClass("error");

        _doComputeTotalAmount();
        _doCountTotalSalesOrder();
    }

    var _doShowSavedSalesOrder = function () {
        $('#divsalesorderform').hide();
        $('#divlistofsalesorders').show();

        //hideshowbuttons
        $('#btnlistofsalesorder').hide();
        $('#btnsavesalesorder').hide();
        $('#btnsalesorderform').show();
    }
    var _doShowSalesOrderForm = function () {
        $('#divlistofsalesorders').hide();
        $('#divsalesorderform').show();

        //hideshowbuttons
        $('#btnsalesorderform').hide();
        $('#btnsavesalesorder').show();
        $('#btnlistofsalesorder').show();
    }
    var _doSaveSalesOrder = function () {
        var salesOrderDetail = [], salesOrder = [], newSalesOrder, newItem, $tds;
        var salesOrders = [];

        $frmSalesOrder = $('#frmSalesOrder');
        $gvSalesOrderDetails = $('#gvSalesOrderDetails');
        $ddlCustomer = $('#SalesCustomer');

        $gvSalesOrderDetails.find('tbody > tr').each(function () {
            $tds = $(this).find('td');
            var productId,
                quantity,
                unitPrice,
                unitText,
                totalPricePerItemQty;

            productId = $tds.eq(0).find('input:hidden').eq(0).val();
            quantity = $tds.eq(1).find('span').find('input').val();
            unitText = $tds.eq(2).find('span').find('select').val();
            unitPrice = $tds.eq(3).find('span').text();
            totalPricePerItemQty = $tds.eq(4).find('span').text();

            newItem = {
                ProductID: productId,
                Quantity: quantity,
                UnitDesc: unitText,
                UnitPrice: unitPrice,
                TotalPricePerItemQty: totalPricePerItemQty
            };
            salesOrderDetail.push(newItem);
        });



        if (INFRA.IsNullOrEmpty($ddlCustomer.val())) {
            $('[data-valmsg-for="CustomerId"]').html("<br/>Customer field is a required field").removeClass("field-validation-valid").addClass("error");
        } else {
            salesOrders = JSON.stringify({
                'salesOrderDetailDto': salesOrderDetail,
                'customerId': $ddlCustomer.val()
            });


            $.ajax({
                contentType: 'application/json; charset=utf-8',
                type: "POST",
                dataType: 'json',
                url: _variables.params.saveSalesOrderUrl,
                data: salesOrders,
                success: function (data) {
                    //$('body').hideLoader();
                    if (data.isSuccess) {
                        _doRefreshItem();
                        $('#divSavedSalesOrder').html(data.salesOrder);
                        _doBindTblSavedSalesOrder();
                        _doClearItemsInSalesOrder();
                    }
                    $('#divResultContainer').show().html(data.alertMessage);
                }
            });
        }




    }
    //#EndRegion Private Methods



    

    //#Region Private Methods for product
    var _doSearchItem = function () {
        $frmSearchProduct = $('#frmSearchProduct');

        $.ajax({
            url: _variables.params.searchProductUrl,
            type: 'POST',
            data: $frmSearchProduct.serialize(),
            success: function (data) {
                $('#divproducts').html(data);
                _doBindTblProduct();

                $('#mdlsearchproduct').modal('hide');
                INFRA.doRemoveOpenedModal();
            }
        });
    }
    var _doRefreshItem = function () {
        $frmSearchProduct = $('#frmSearchProduct');

        $.ajax({
            url: _variables.params.inventoryRefreshUrl,
            type: 'POST',
            data: $frmSearchProduct.serialize(),
            success: function (data) {
                //if (INFRA.ConvertToBoolean(data.isSuccess)) {
                $('#divproducts').html(data);
                _doBindTblProduct();

                //}
            }
        });
    }
    //#EndRegion Private Methods for product


    var doChangeProductCategory = function () {
        var $category = $('#ProductCategory').data('kendoDropDownList');

        if (!INFRA.IsNullOrEmpty($category.value())) {
            $("#SalesProduct").kendoDropDownList({
                filter: "startswith",
                optionLabel: 'Select item',
                dataTextField: "DropDownDisplay",
                dataValueField: "ProductID",
                dataSource: {
                    transport: {
                        read: {
                            dataType: "json",
                            url: _variables.params.productByCategoryIdUrl,
                            data: {
                                categoryId: $category.value()
                            }
                        }
                    }
                }
            });
        } else {
            $("#SalesProduct").kendoDropDownList({
                filter: "startswith",
                optionLabel: 'Select item',
                dataTextField: "DropDownDisplay",
                dataValueField: "ProductID",
                dataSource: {
                    transport: {
                        read: {
                            dataType: "json",
                            url: _variables.params.productGetUrl
                        }
                    }
                }
            });
        }


    }

    //#Region Private Methods for KendoGrid
    var _doBindTblProduct = function () {
        var $gvProduct = $('#gvProduct'), schemaField = {}, columns = [],
            width, field;


        $gvProduct.find('th').each(function () {
            $this = $(this);
            width = INFRA.ReplaceIfNullOrEmpty($this.data('width'), 100);
            field = $this.data('field');

            column = {
                width: width,
                field: field,
                attributes: {
                    "class": "text-center"
                }
            }
            columns.push(column);
        });

        $gvProduct.kendoGrid({
            sortable: false,
            scrollable: true,
            pageable: true,
            dataSource: {
                pageSize: 8
            },
            columns: columns,
            dataBound: function () {
                $('th').each(function () {
                    $this = $(this);
                    $this.addClass('strong text-center');
                });

                $('td').each(function () {
                    var $this = $(this);
                    var identifier = $this.find("i").eq(0);
                    var id, cssClass;

                    if (!INFRA.IsNullOrEmpty(identifier)) {
                        id = identifier.data('id');
                        cssClass = identifier.data('css-class');

                        if (!INFRA.IsNullOrEmpty(id)) {
                            $this.prop('id', id);
                        }

                        if (!INFRA.IsNullOrEmpty(cssClass)) {
                            $this.addClass(cssClass);
                        }

                        identifier.remove();
                    }
                });
            }
        });
        
        $gvProduct.kGridResizeHeight({
            height: _variables.gvProductHeight,
            willRefreshGrid: false,
            isManual: true
        });
    }
    var _doBindTblSavedSalesOrder = function () {
        var $gvSavedSalesOrder = $('#gvSavedSalesOrder'), schemaField = {}, columns = [],
            width, field;


        $gvSavedSalesOrder.find('th').each(function () {
            $this = $(this);
            width = INFRA.ReplaceIfNullOrEmpty($this.data('width'), 100);
            field = $this.data('field');

            column = {
                width: width,
                field: field,
                attributes: {
                    "class": "text-center"
                }
            }
            columns.push(column);
        });

        $gvSavedSalesOrder.kendoGrid({
            sortable: false,
            scrollable: true,
            pageable: true,
            dataSource: {
                pageSize: 8
            },
            columns: columns,
            dataBound: function () {
                $('th').each(function () {
                    $this = $(this);
                    $this.addClass('strong text-center');
                });

                $('td').each(function () {
                    var $this = $(this);
                    var identifier = $this.find("i").eq(0);
                    var id, cssClass;

                    if (!INFRA.IsNullOrEmpty(identifier)) {
                        id = identifier.data('id');
                        cssClass = identifier.data('css-class');

                        if (!INFRA.IsNullOrEmpty(id)) {
                            $this.prop('id', id);
                        }

                        if (!INFRA.IsNullOrEmpty(cssClass)) {
                            $this.addClass(cssClass);
                        }

                        identifier.remove();
                    }
                });
            }
        });
    }
    //#EndRegion Private Methods for KendoGrid


    var initialize = function (options) {
        try {
            _variables.params = options || {};
        } catch (ex) {
            if (typeof console !== "undefined" && console !== null) {
                console.error("Error parsing inline options", ex);
            }
        }
        _doInitializeKendoElements();
        _doInitializeElements();
        _doBindTblProduct();
        _doBindTblSavedSalesOrder();

    }

    return {
        initialize: initialize,
        _variables : _variables
    }

})();

$(document).ready(function () {
    var options = window.salesOptions;

    

    ORDERMANAGEMENTSALESORDER.initialize(options);

    
    $(window).resize(function () {
        $('#gvProduct').kGridResizeHeight({
            height: ORDERMANAGEMENTSALESORDER._variables.gvProductHeight,
            willRefreshGrid: false,
            isManual: true
        });
    });
});
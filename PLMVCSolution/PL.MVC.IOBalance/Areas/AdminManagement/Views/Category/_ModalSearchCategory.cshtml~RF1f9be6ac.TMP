@model PL.MVC.IOBalance.Areas.AdminManagement.Models.CategorySearchModel

<div class="modal fade" id="mdlsearchcategory" tabindex="-1" role="dialog" aria-labelledby="mdlsearchcategory" aria-hidden="true">
    <div class="modal-dialog">
        <h4 class="modal-title text-center">Search Category</h4>
    </div>
    <div class="modal-content">
        <div class="modal-body">
            <form class="form-horizontal" id="frmSearchCategory">
                <div class="form-group">
                    <label for="" class="control-label col-sm-3">Category Code</label>
                    <div class="control-input col-sm-8">
                        @Html.TextBoxFor(m => m.CategoryCode,
                        new
                        {
                            @class = "form-control",
                            @id = "CategoryCode"
                        })
                    </div>
                </div>
                <div class="form-group">
                    <label for="" class="control-label col-sm-3">Category Name</label>
                    <div class="control-input col-sm-8">
                        @Html.TextBoxFor(m => m.CategoryName,
                        new
                        {
                            @class = "form-control",
                            @id = "CategoryName"
                        })
                    </div>
                </div>
                <div class="form-group">
                    <label for="" class="control-label col-sm-3">Active</label>
                    <div class="control-input col-sm-8">
                        @(Html.Kendo().DropDownList()
                                    .Name(Html.NameFor(model => model.isActive).ToString())
                                    .DataTextField(InfraExtensions.GetPropertyName<CompanyOfficeDto, string>(p => p.RecruitmentDisplayLabel))
                                    .DataValueField(InfraExtensions.GetPropertyName<CompanyOfficeDto, int>(p => p.OfficeId))
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action(ROPESMVC.Api.Common.GetRecruitmentOffice());
                                        });
                                    })
                                    .Value(Model.isActive)
                                    .OptionLabel("-Select All-")
                                    .HtmlAttributes(new
                                    {
                                        @id = "ddlIsActive",
                                        @style = "width: 100%"
                                    })
                        )
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
